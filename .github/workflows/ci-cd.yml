name: CI/CD Spring Boot Docker

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/absm-be-deploy

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      # Xuất image (bao gồm SHA tag) để job deploy dùng
      image: ${{ steps.build.outputs.full_image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Docker image
        id: build
        env:
          DOCKER_BUILDKIT: 1
        run: |
          FULL_IMAGE="${IMAGE_NAME}:${GITHUB_SHA}"
          # Xuất output để job khác dùng
          echo "full_image=$FULL_IMAGE" >> $GITHUB_OUTPUT
          # Build & tag
          docker build \
            --file Dockerfile \
            --tag "$FULL_IMAGE" \
            --tag "${IMAGE_NAME}:latest" \
            .
          # Push cả hai tag
          docker push "$FULL_IMAGE"
          docker push "${IMAGE_NAME}:latest"

  deploy:
    name: Deploy to Google Cloud VM
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ needs.build.outputs.image }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
    steps:
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

      - name: Deploy container on VM
        run: |
          echo "Deploying $IMAGE to $SERVER_IP"
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP <<EOF
            # Dừng container cũ nếu có
            docker rm -f absm-be-deploy || true
            # Kéo image mới
            docker pull $IMAGE
            # Chạy container mới, map 8080, tự restart khi crash
            docker run -d \
              --name absm-be-deploy \
              -p 8080:8080 \
              --restart always \
              $IMAGE
          EOF
